generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int                 @id @default(autoincrement())
  name               String
  email              String?             @unique // Email and passwordHash are optional, because they aren't added until register-end.
  emailVerified      Boolean             @default(false)
  passwordHash       String?
  joinDate           DateTime
  completedPractices CompletedPractice[]
  favorites          Favorite[]
}

model Category {
  id               Int        @id @default(autoincrement())
  title            String
  iconPrimaryUrl   String
  iconSecondaryUrl String
  iconCardUrl      String
  backgroundUrl    String
  practices        Practice[]
}

model PracticeType {
  id        Int        @id @default(autoincrement())
  title     String
  practices Practice[]
}

model Practice {
  id                 Int                 @id @default(autoincrement())
  category           Category            @relation(fields: [categoryId], references: [id])
  categoryId         Int
  practiceType       PracticeType        @relation(fields: [practiceTypeId], references: [id])
  practiceTypeId     Int
  durationMillis     Int
  audioUrl           String
  completedPractices CompletedPractice[]
  favorites          Favorite[]
}

model CompletedPractice {
  id             Int      @id @default(autoincrement())
  practice       Practice @relation(fields: [practiceId], references: [id])
  practiceId     Int
  user           User     @relation(fields: [userId], references: [id])
  userId         Int
  completionDate DateTime
}

model Favorite {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  practice   Practice @relation(fields: [practiceId], references: [id])
  practiceId Int
}
